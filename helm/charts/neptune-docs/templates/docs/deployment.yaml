apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "chart.fullname" . }}-docs
  labels:
    app: {{ template "chart.name" . }}
    chart:  {{ template "chart.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.docs.replicas }}
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      component: docs
      app: {{ template "chart.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        component: docs
        app: {{ template "chart.name" . }}
        release: {{ .Release.Name }}
    spec:
      restartPolicy: Always
      {{- with .Values.docs.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 -}}
      {{- end }}
      {{- with .Values.docs.tolerations }}
      tolerations: {{ toYaml . | nindent 8 -}}
      {{- end }}
      containers:
      - name: nginx
        image: "{{ .Values.global.registry }}/docs:{{ if .Values.docs.image }}{{ .Values.docs.image }}{{ else }}{{ .Chart.Version }}{{ end }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.docs.port }}
        env:
        - name: IS_PRODUCTION
          value: "{{ .Values.global.production }}"
        - name: HEAP_ID
          value: "{{ .Values.docs.heapId }}"
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.docs.port }}
        {{- with .Values.docs.resources }}
        resources: {{ toYaml . | nindent 10 -}}
        {{- end }}